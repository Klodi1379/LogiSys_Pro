# Generated by Django 4.2.7 on 2025-08-27 15:02

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("inventory", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Warehouse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("code", models.CharField(max_length=20, unique=True)),
                ("address", models.TextField()),
                ("city", models.CharField(max_length=100)),
                ("state", models.CharField(max_length=100)),
                ("postal_code", models.CharField(max_length=20)),
                ("country", models.CharField(max_length=100)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "total_capacity_sqm",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "total_capacity_cbm",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "manager",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="managed_warehouses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="StorageLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("zone", models.CharField(max_length=10)),
                ("aisle", models.CharField(max_length=10)),
                ("rack", models.CharField(max_length=10)),
                ("shelf", models.CharField(max_length=10)),
                ("bin", models.CharField(blank=True, max_length=10)),
                (
                    "max_weight_kg",
                    models.DecimalField(decimal_places=2, default=1000, max_digits=8),
                ),
                (
                    "max_volume_cbm",
                    models.DecimalField(decimal_places=2, default=10, max_digits=8),
                ),
                (
                    "used_capacity",
                    models.DecimalField(decimal_places=2, default=0, max_digits=8),
                ),
                ("is_available", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "warehouse",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="storage_locations",
                        to="warehousing.warehouse",
                    ),
                ),
            ],
            options={
                "ordering": ["warehouse", "zone", "aisle", "rack", "shelf", "bin"],
                "unique_together": {
                    ("warehouse", "zone", "aisle", "rack", "shelf", "bin")
                },
            },
        ),
        migrations.CreateModel(
            name="StockItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                ("reserved_quantity", models.IntegerField(default=0)),
                ("batch_number", models.CharField(blank=True, max_length=50)),
                ("manufacturing_date", models.DateField(blank=True, null=True)),
                ("expiry_date", models.DateField(blank=True, null=True)),
                ("unit_cost", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "received_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("last_movement", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="stock_items",
                        to="warehousing.storagelocation",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stock_items",
                        to="inventory.product",
                    ),
                ),
                (
                    "warehouse",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stock_items",
                        to="warehousing.warehouse",
                    ),
                ),
            ],
            options={
                "ordering": ["product", "warehouse", "expiry_date"],
            },
        ),
    ]
